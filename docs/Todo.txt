For release 0.8:
 * Tutorial update; add some HowTos?

don't fix:
 * static text: change Widget->Align left, Layout->Expand -> with border
   -> re-create required on style change


User Interface:
 * better icons for GridSizers and grid sizer slots
 * multiple selections in Tree window -> allow editing properties for multiple widgets at the same time
 * support events from the base classes and the addition of any event as text
 * change the user interface towards ribbons, property grid and a single frame instead of separate windows?
 * implement undo/re-do; use this for GUI scripting (testing)
done:
 * implement "re-do / Ctrl-Y" and "repeat / Ctrl-R" to apply last property modification(s) to currently selected widget
 * new dialog for Toolbar (similar to the new menu dialog)
 * ask user whether he really wants a standalone menu/toolbar


Code generation:
 * improve readability of the generated code
 * add a preview tab for the generated code / better integrate automatic and user generated code
 * option to switch off code generation random facts like: "# generated by wxGlade 0.6.8"
 * Code property: split into global, local/private and post-init
 * Code (property): read user code from file
done:
 * refactor code generation (direct generation instead of XML parser)
 * support ID-less menus also in C++ (i.e. without explicitely defining an ID)


File Format:
 * add file format revision?
done:
 * get rid of obsolete options -> convert when opening file

Internal:
 * refactor edit_sizers and ManagedBase
done:
 * refactor Property handling


Use either gettext or wx.GetTranslation for _


Additional Widgets:
 * WrapSizer
 * Ribbons 
 * stc.StyledTextCtrl
done:
 * GridBagSizer


Widget properties etc.:
 * Splitter: ask user whether to add panels
 * RadioBox: tooltips per button
done:
 * ListCtrl properties: rows, cols
 * Grid rows property
 * Grid col resizing in design window
 * better dialog code


Data structures:
 * use the History instead of the logging facilities
 * use consistent names? e.g.:
    node: tree nodes
    item: EditBase instances; with parent and children[...] attributes
    widget: actual wx Widgets
 * separate items and tree
 * use a structure of EditBase instances as main data structure; use tree only for the representation


Development process:
 * move to GitHub
